---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.0
  name: containercheckpointclasses.checkpointing.zacchaeuschok.github.io
spec:
  group: checkpointing.zacchaeuschok.github.io
  names:
    kind: ContainerCheckpointClass
    listKind: ContainerCheckpointClassList
    plural: containercheckpointclasses
    singular: containercheckpointclass
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ContainerCheckpointClass is the Schema for the containercheckpointclasses
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ContainerCheckpointClassSpec defines the desired state of
              ContainerCheckpointClass.
            properties:
              deletionPolicy:
                description: |-
                  DeletionPolicy controls what happens to the checkpoint data when
                  the ContainerCheckpoint (and its associated content) is deleted.
                  Valid values might be "Delete" (remove both the CR and the underlying checkpoint)
                  or "Retain" (keep the underlying checkpoint data).
                type: string
              parameters:
                additionalProperties:
                  type: string
                description: |-
                  Parameters are additional key/value pairs that allow the administrator to pass
                  extra options to the underlying storage system (for example, mount options, etc.).
                type: object
              storageLocation:
                description: |-
                  StorageLocation defines where the checkpoint data should be stored.
                  For a local checkpoint, this could be the default node-local directory.
                  For a remote checkpoint, this could point to a mount (e.g. an NFS share).
                type: string
            required:
            - deletionPolicy
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
