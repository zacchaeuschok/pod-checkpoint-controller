---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.0
  name: containercheckpointcontents.checkpointing.zacchaeuschok.github.io
spec:
  group: checkpointing.zacchaeuschok.github.io
  names:
    kind: ContainerCheckpointContent
    listKind: ContainerCheckpointContentList
    plural: containercheckpointcontents
    shortNames:
    - ccc
    singular: containercheckpointcontent
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ContainerCheckpointContentSpec describes the actual underlying data for
              a single container checkpoint.
            properties:
              containerCheckpointRef:
                description: |-
                  ContainerCheckpointRef points back to the namespaced ContainerCheckpoint
                  this content is bound to, if any. For dynamic creation, the controller
                  sets this field. For a pre-existing checkpoint, the user sets it.
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
              deletionPolicy:
                description: |-
                  DeletionPolicy is "Retain" or "Delete". If "Delete", the checkpoint data
                  should be garbage-collected when the parent ContainerCheckpoint is removed.
                type: string
              storageLocation:
                description: StorageLocation is a path or URI describing where the
                  container checkpoint data lives.
                type: string
            type: object
          status:
            properties:
              checkpointTime:
                description: CheckpointTime is when the container data was captured,
                  if known.
                format: date-time
                type: string
              errorMessage:
                description: ErrorMessage holds any errors from the underlying checkpoint
                  creation or fetch process.
                type: string
              readyToRestore:
                description: ReadyToRestore signals if the container checkpoint data
                  is fully available.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
