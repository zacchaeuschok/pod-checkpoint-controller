---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.0
  name: podcheckpointcontents.checkpointing.zacchaeuschok.github.io
spec:
  group: checkpointing.zacchaeuschok.github.io
  names:
    kind: PodCheckpointContent
    listKind: PodCheckpointContentList
    plural: podcheckpointcontents
    shortNames:
    - pcc
    singular: podcheckpointcontent
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PodCheckpointContentSpec holds the actual data for a Pod-level
              checkpoint.
            properties:
              containerCheckpoints:
                description: ContainerCheckpoints references each container's checkpoint
                  data, if desired.
                items:
                  description: |-
                    ContainerCheckpointReference can store the name of each containerâ€™s
                    ContainerCheckpointContent if you want aggregated tracking at the Pod level.
                  properties:
                    containerCheckpointContentName:
                      description: The container checkpoint content name if you want
                        to link them.
                      type: string
                    containerName:
                      description: The container name inside the Pod
                      type: string
                  required:
                  - containerName
                  type: object
                type: array
              deletionPolicy:
                description: DeletionPolicy is "Retain" or "Delete".
                type: string
              podCheckpointRef:
                description: |-
                  PodCheckpointRef references the namespaced PodCheckpoint this content binds to.
                  For dynamic creation, the controller sets it. For pre-existing data, user sets it.
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
              podName:
                type: string
              podNamespace:
                type: string
              podUID:
                description: If you want to track the actual Pod name/UID, set them
                  here.
                type: string
              storageLocation:
                description: A location (filesystem path, object storage URL, etc.)
                  where the Pod checkpoint data is stored.
                type: string
            type: object
          status:
            properties:
              checkpointTime:
                description: When the Pod-level checkpoint was created
                format: date-time
                type: string
              errorMessage:
                description: Last error encountered
                type: string
              readyToRestore:
                description: True if the Pod checkpoint data is fully restorable
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
