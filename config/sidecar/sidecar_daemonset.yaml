apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: container-checkpoint-sidecar
  namespace: external-checkpointer-system
  labels:
    app: container-checkpoint-sidecar
spec:
  selector:
    matchLabels:
      app: container-checkpoint-sidecar
  template:
    metadata:
      labels:
        app: container-checkpoint-sidecar
    spec:
      hostNetwork: true
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      serviceAccountName: container-checkpoint-sidecar
      containers:
        - name: checkpoint-sidecar
          image: localhost/external-checkpointer-sidecar:latest
          imagePullPolicy: Never
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Listing mounted files:";
              ls -la /var/lib/kubelet/pki/;
              ls -la /etc/kubernetes/pki/;
              ls -la /var/run/secrets/kubernetes.io/serviceaccount/;
              echo "Starting controller...";
              exec /sidecar --health-probe-bind-address=:0
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: kubelet-checkpoints
              mountPath: /var/lib/kubelet/checkpoints
              mountPropagation: Bidirectional
              readOnly: false
            - name: kubelet-client-certs
              mountPath: /var/lib/kubelet/pki
              readOnly: true
            - name: kubelet-certs
              mountPath: /etc/kubernetes/pki
              readOnly: true
            - name: service-account-token
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              readOnly: true
          securityContext:
            privileged: true
            runAsUser: 0
            runAsNonRoot: false
            allowPrivilegeEscalation: true
            capabilities:
              drop: ["ALL"]
              add: ["DAC_OVERRIDE"]
            readOnlyRootFilesystem: false
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: kubelet-checkpoints
          hostPath:
            path: /var/lib/kubelet/checkpoints
            type: DirectoryOrCreate
        - name: kubelet-certs
          hostPath:
            path: /etc/kubernetes/pki
            type: Directory
        - name: kubelet-client-certs
          hostPath:
            path: /var/lib/kubelet/pki
            type: DirectoryOrCreate
        - name: service-account-token
          projected:
            sources:
              - serviceAccountToken:
                  path: token
                  expirationSeconds: 600
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: ca.crt