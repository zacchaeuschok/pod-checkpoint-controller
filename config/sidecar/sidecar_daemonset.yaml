apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: container-checkpoint-sidecar
  namespace: kube-system
  labels:
    app: container-checkpoint-sidecar
spec:
  selector:
    matchLabels:
      app: container-checkpoint-sidecar
  template:
    metadata:
      labels:
        app: container-checkpoint-sidecar
    spec:
      hostNetwork: true
      serviceAccountName: container-checkpoint-sidecar
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: Exists
          effect: NoSchedule

      # ───── containers ────────────────────────────────────────────────
      containers:
        - name: checkpoint-sidecar
          image: localhost/external-checkpointer-sidecar:latest
          imagePullPolicy: Never

          command: ["/sidecar"]
          args:
            - --health-probe-bind-address=:18081

          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName

          volumeMounts:
            - name: kubelet-checkpoints
              mountPath: /var/lib/kubelet/checkpoints
              mountPropagation: HostToContainer
            - name: kubelet-client-certs
              mountPath: /var/lib/kubelet/pki
              readOnly: true
            - name: kubelet-certs
              mountPath: /etc/kubernetes/pki
              readOnly: true
            - name: containers-store                # ← Buildah store
              mountPath: /var/lib/containers
            - name: service-account-token
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              readOnly: true

          securityContext:
            privileged: true                         # Buildah needs this
            runAsUser: 0
            runAsNonRoot: false
            # readOnlyRootFilesystem must be false when privileged
            # allowPrivilegeEscalation is implied by privileged=true

      # ───── volumes ───────────────────────────────────────────────────
      volumes:
        - name: kubelet-checkpoints
          hostPath:
            path: /var/lib/kubelet/checkpoints
            type: DirectoryOrCreate
        - name: kubelet-certs
          hostPath:
            path: /etc/kubernetes/pki
            type: Directory
        - name: kubelet-client-certs
          hostPath:
            path: /var/lib/kubelet/pki
            type: DirectoryOrCreate
        - name: containers-store                     # host CRI‑O graph
          hostPath:
            path: /var/lib/containers
            type: DirectoryOrCreate
        - name: service-account-token
          projected:
            sources:
              - serviceAccountToken:
                  path: token
                  expirationSeconds: 600
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: ca.crt
